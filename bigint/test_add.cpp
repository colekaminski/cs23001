// bigint Test Program
//
// Tests:  int constructor, uses ==
//
// NEED TO IMPLEMENT
//
#include <iostream>
#include <cassert>
#include "bigint.hpp"


//===========================================================================
int main() {
    {

        //------------------------------------------------------
        // Setup fixture
        bigint left(0);
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 0);
        assert(right == 0);
        assert(result == 0);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left(1);
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 1);
        assert(right == 0);
        assert(result == 1);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left(1);
        bigint right(1);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 1);
        assert(right == 1);
        assert(result == 2);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("0");
        bigint right("0");
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 0);
        assert(right == 0);
        assert(result == 0);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("1");
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 1);
        assert(right == 0);
        assert(result == 1);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("010");
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 10);
        assert(right == 0);
        assert(result == 10);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        assert(right == 0);
        assert(result == "2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        bigint right("2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        assert(right == "2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
        assert(result == "4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    }
    
    {
        //------------------------------------------------------
        // Setup fixture
        bigint left(123456789);
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 123456789);
        assert(right == 0);
        assert(result == 123456789);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");
        bigint right("2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");
        assert(right == "2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        assert(result == "3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        bigint right(0);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        assert(right == 0);
        assert(result == "3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("0");
        bigint right("3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "0");
        assert(right == "3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        assert(result == "3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("123");
        bigint right(100);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 123);
        assert(right == "100");
        assert(result == 223);
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("100");
        bigint right(123);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == "100");
        assert(right == "123");
        assert(result == "223");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left(1);
        bigint right(1);
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 1);
        assert(right == 1);
        assert(result == "2");
    }

    {
        //------------------------------------------------------
        // Setup fixture
        bigint left("100000000");
        bigint right("123456789");
        bigint result;

        // Test
        result = left + right;

        // Verify
        assert(left == 100000000);
        assert(right == 123456789);
        assert(result == "223456789");
    }






        std::cout << "Done with testing addition." << std::endl;
        return 0;
    }
 

